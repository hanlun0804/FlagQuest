/* tslint:disable */
/* eslint-disable */
/**
 * FlagQuest Backend
 * The API for the FlagQuest guessing game
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface Options
 */
export interface Options {
    /**
     * 
     * @type {number}
     * @memberof Options
     */
    maxNumOfPlayers?: number;
    /**
     * 
     * @type {number}
     * @memberof Options
     */
    numberOfQuestions?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Options
     */
    showAnswers?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    gameMode?: OptionsGameModeEnum;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    level?: OptionsLevelEnum;
    /**
     * 
     * @type {boolean}
     * @memberof Options
     */
    isPrivate?: boolean;
}


/**
 * @export
 */
export const OptionsGameModeEnum = {
    GuessingFlags: 'GuessingFlags',
    GuessingCaptials: 'GuessingCaptials',
    GuessingCountries: 'GuessingCountries'
} as const;
export type OptionsGameModeEnum = typeof OptionsGameModeEnum[keyof typeof OptionsGameModeEnum];

/**
 * @export
 */
export const OptionsLevelEnum = {
    Europe: 'Europe',
    Asia: 'Asia',
    Africa: 'Africa',
    NorthAmerica: 'NorthAmerica',
    SouthAmerica: 'SouthAmerica',
    Oceania: 'Oceania'
} as const;
export type OptionsLevelEnum = typeof OptionsLevelEnum[keyof typeof OptionsLevelEnum];


/**
 * Check if a given object implements the Options interface.
 */
export function instanceOfOptions(value: object): boolean {
    return true;
}

export function OptionsFromJSON(json: any): Options {
    return OptionsFromJSONTyped(json, false);
}

export function OptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Options {
    if (json == null) {
        return json;
    }
    return {
        
        'maxNumOfPlayers': json['maxNumOfPlayers'] == null ? undefined : json['maxNumOfPlayers'],
        'numberOfQuestions': json['numberOfQuestions'] == null ? undefined : json['numberOfQuestions'],
        'showAnswers': json['showAnswers'] == null ? undefined : json['showAnswers'],
        'gameMode': json['gameMode'] == null ? undefined : json['gameMode'],
        'level': json['level'] == null ? undefined : json['level'],
        'isPrivate': json['isPrivate'] == null ? undefined : json['isPrivate'],
    };
}

export function OptionsToJSON(value?: Options | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'maxNumOfPlayers': value['maxNumOfPlayers'],
        'numberOfQuestions': value['numberOfQuestions'],
        'showAnswers': value['showAnswers'],
        'gameMode': value['gameMode'],
        'level': value['level'],
        'isPrivate': value['isPrivate'],
    };
}

