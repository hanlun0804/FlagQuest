/* tslint:disable */
/* eslint-disable */
/**
 * FlagQuest Backend
 * The API for the FlagQuest guessing game
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Options } from './Options';
import {
    OptionsFromJSON,
    OptionsFromJSONTyped,
    OptionsToJSON,
} from './Options';

/**
 * 
 * @export
 * @interface Lobby
 */
export interface Lobby {
    /**
     * 
     * @type {string}
     * @memberof Lobby
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Lobby
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Lobby
     */
    state?: LobbyStateEnum;
    /**
     * 
     * @type {string}
     * @memberof Lobby
     */
    creationTime?: string;
    /**
     * uuid of player
     * @type {string}
     * @memberof Lobby
     */
    admin?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Lobby
     */
    players?: Array<string>;
    /**
     * 
     * @type {Options}
     * @memberof Lobby
     */
    options?: Options;
}


/**
 * @export
 */
export const LobbyStateEnum = {
    WaitingForPlayers: 'waitingForPlayers',
    Pending: 'pending',
    InGame: 'inGame'
} as const;
export type LobbyStateEnum = typeof LobbyStateEnum[keyof typeof LobbyStateEnum];


/**
 * Check if a given object implements the Lobby interface.
 */
export function instanceOfLobby(value: object): boolean {
    return true;
}

export function LobbyFromJSON(json: any): Lobby {
    return LobbyFromJSONTyped(json, false);
}

export function LobbyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Lobby {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'state': json['state'] == null ? undefined : json['state'],
        'creationTime': json['creationTime'] == null ? undefined : json['creationTime'],
        'admin': json['admin'] == null ? undefined : json['admin'],
        'players': json['players'] == null ? undefined : json['players'],
        'options': json['options'] == null ? undefined : OptionsFromJSON(json['options']),
    };
}

export function LobbyToJSON(value?: Lobby | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'state': value['state'],
        'creationTime': value['creationTime'],
        'admin': value['admin'],
        'players': value['players'],
        'options': OptionsToJSON(value['options']),
    };
}

