openapi: '3.0.2'
info:
  title: FlagQuest Backend
  description: The API for the FlagQuest guessing game
  version: '1.0'
servers:
  - description: Local Backend
  - url: http://localhost:3000/
paths:
  /user:
    post:
      tags:
       - User
      summary: Create User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the user to create
                nationality:
                  $ref: '#/components/schemas/Nationality'
      responses:
        '200':
          description: Successfully registered user
          # server.com/user/{user_id}
  '/user/{id}':
    get:
      tags:
       - User
      summary: Get user info
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
       - User
      summary: Update user info
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        userName:
          type: string
        friendUuidList:
          type: array
          items: 
            type: string
            description: List of users
        highScores:
          type: array
          items:
            $ref: '#/components/schemas/Score'
        lastOnline:
          type: string
        creationTime:
          type: string
        nationality:
          $ref: '#/components/schemas/Nationality'
    UpdateUser:
      type: object
      properties:
        userName:
          type: string
        nationality:
          $ref: '#/components/schemas/Nationality'
    Score:
      type: object
      properties:
        title:
          type: string
        value:
          type: integer
    Options:
      type: object
      properties:
        maxNumOfPlayers:
          type: integer
        numberOfQuestions:
          type: integer
        showAnswers:
          type: boolean
        gameMode:
          type: string
          enum: [GuessingFlags, GuessingCaptials, GuessingCountries]
        level:
          type: string
          enum: [Europe, Asia, Africa, NorthAmerica, SouthAmerica, Oceania]
        isPrivate:
          type: boolean
    Lobby:
      type: object
      properties:
        id: 
          type: string
        name:
          type: string
        state:
          type: string
          enum: [waitingForPlayers, pending, inGame]
        creationTime:
          type: string
        admin:
          type: string
          description: uuid of player
        players:
          type: array
          items:
            type: string
            description: List of player uuids
        options:
          $ref: '#/components/schemas/Options'
    AnswerOption:
      type: object
      properties:
        description:
          type: string
        isCorrect:
          type: boolean
    Question:
      type: object
      properties:
        description:
          type: string
        answerOptions:
          type: array
          items:
            $ref: '#/components/schemas/AnswerOption'
    Quiz:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Nationality:
      type: string
      enum: [German, Norsk, English, Nederlands]
    